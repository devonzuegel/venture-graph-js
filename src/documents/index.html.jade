---
layout: default
title: 'Home'
---

script(src="http://d3js.org/d3.v3.min.js")

style.
  .link {
    stroke: #ccc;
  }

  .node text {
    pointer-events: none;
    cursor: crosshair;
    font: 10px sans-serif;
  }

div.page-content
  #graph

script(type="application/json" id="mis").
    {
      "nodes": [
        {
          "name": "XXXX",
          "group": 4
        }, {
          "name": "Mme.Hucheloup",
          "group": 2
        }, {
          "name": "aaaaa",
          "group": 8
        }, {
          "name": "bbb",
          "group": 1
        }
      ],
      

      "links": [
        {
          "source": 1,
          "target": 0,
          "value": 1
        }
      ]
    }

script.
  //Constants for the SVG
  var width = document.getElementById("nav").offsetWidth,
      height = window.innerHeight;

  //Set up the colour scale
  var color = d3.scale.category20();

  //Set up the force layout
  var force = d3.layout.force()
      .charge(-420)
      .linkDistance(80)
      .size([width, height]);

  //Append a SVG to the body of the html page. Assign this SVG as an object to svg
  var svg = d3.select('#graph').append("svg")
      .attr("width", width)
      .attr("height", height);

  //Read the data from the mis element 
  var mis = document.getElementById('mis').innerHTML;
  graph = JSON.parse(mis);

  //Creates the graph data structure out of the json data
  force.nodes(graph.nodes)
      .links(graph.links)
      .start();

  //Create all the line svgs but without locations yet
  var link = svg.selectAll(".link")
      .data(graph.links)
      .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function (d) {
        return Math.sqrt(d.value);
      });

  //Do the same with the circles for the nodes - no 
  //Changed
  var node = svg.selectAll(".node")
      .data(graph.nodes)
      .enter().append("g")
      .attr("class", "node")
      .call(force.drag);

  node.append("circle")
      .attr("r", 8)
      .style("fill", function (d) {
      return color(d.group);
  })

  node.append("text")
        .attr("dx", 10)
        .attr("dy", ".35em")
        .text(function(d) { return d.name });
  //End changed


  //Now we are giving the SVGs co-ordinates - the force layout is generating the co-ordinates which this code is using to update the attributes of the SVG elements
  force.on("tick", function () {
      link.attr("x1", function (d) {
          return d.source.x;
      })
          .attr("y1", function (d) {
          return d.source.y;
      })
          .attr("x2", function (d) {
          return d.target.x;
      })
          .attr("y2", function (d) {
          return d.target.y;
      });

      //Changed
      
      d3.selectAll("circle").attr("cx", function (d) {
          return d.x;
      })
          .attr("cy", function (d) {
          return d.y;
      });

      d3.selectAll("text").attr("x", function (d) {
          return d.x;
      })
          .attr("y", function (d) {
          return d.y;
      });
      
      //End Changed

  });


  // var user_key = 'c7653c536c2266d0da1155557600c8a4';
  // var crunchbase_api_url = 'https://api.crunchbase.com/v/2/organization/facebook?user_key='+user_key+'&callback=?';

  // $.getJSON(crunchbase_api_url, function(data){
  //   var parsed = JSON.stringify(data, null, 3);
  //   console.log(parsed);
  // })

  // function getOrganizationUrl(permalink) {
  //   return 'http://api.crunchbase.com/v/2/'
  //   +  'organization/'
  //   +  encodeURIComponent(permalink)
  //   +  '?user_key='
  //   +  apikey;
  // }